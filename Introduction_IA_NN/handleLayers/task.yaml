accessible: true
author: Loan
categories: []
context: |-
    | On à tout les outils en main pour configurer la valeur des neurones avec Blockly.
    | Afin d'obtenir la valeur des neurones de la couche X on doit :
    | 1. Effectuer un produit matriciel de la matrice de la valeurs des neurones de la couche précédente avec la valeur des poids de la couche précédente également.
    | 2. Une fois ce calcul effectué, on applique la fonction *sigmoide* sur chacune des valeurs qu'on attribue ensuite aux valeurs de la couche qu'on traite.
    |
    | *Note* : on verra plus tard ce qu'est la *sigmoide*, ce que tu as à savoir pour l'instant dessus c'est que c'est une fonction (comme *sinus* ou *cosinus*) qui transforme la valeur qu'on lui donne en une autre comprise entre 0 et 1. Tu auras besoin de cette fonction pour éviter que tes neurones se retrouvent avec des valeurs qui ne sont pas entre 0 et 1.
    |
    | **Objectif**
    | Dans le code que je t'ai mis ci-bas le 1. est déjà effectué, il te reste à compléter la partie 2.
environment: default
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    time: '30'
    output: '2'
    memory: '100'
name: '[BLOCKLY] Gérer les autres couches'
network_grading: false
order: 13
problems:
    blocklyRes:
        header: ''
        options:
            zoom:
                startScale: 1.0
                scaleSpeed: 1.2
                maxScale: 3.0
                controls: true
                minScale: 0.3
                wheel: false
            scrollbars: true
            grid:
                snap: true
                colour: '#ccc'
                length: 3
                spacing: 20
            visual:
                position: left
            oneBasedIndex: true
            toolboxPosition: start
            maxBlocks: Infinity
            speed: '60'
            media: /plugins/blockly/static/blockly/media/
            css: true
        files:
        - ../$common/raphael.min.js
        - ../$common/simpleNetworkVisual.js
        - init.js
        blocks_files:
        - ../$common/blocklyBlock/blocks.js
        - ../$common/blocklyBlock/blocksStubs.js
        toolbox: |-
            <xml xmlns="http://www.w3.org/1999/xhtml" id="toolbox" style="display: none;">
              <category name="NN Couche">
                <block type="nn_get_neuron_layer"></block>
                <block type="nn_get_weight_layer"></block>
                <block type="nn_matrix_prod"></block>
                <block type="nn_get_width"></block>
                <block type="nn_get_height"></block>
                <block type="nn_neuron_set_value_layer"></block>
                <block type="nn_get_matrix"></block>
                <block type="nn_sigmoid"></block>
              </category>
              <category name="NN Debug">
                <block type="custom_print"></block>
              </category>
              <sep></sep>
              <category name="Loops" colour="#5CA65C">
                <block type="controls_for">
                  <field name="VAR" id="SB]G`;;#O|oX*nG%tTYj" variabletype="">i</field>
                  <value name="FROM">
                    <shadow type="math_number">
                      <field name="NUM">1</field>
                    </shadow>
                  </value>
                  <value name="TO">
                    <shadow type="math_number">
                      <field name="NUM">10</field>
                    </shadow>
                  </value>
                  <value name="BY">
                    <shadow type="math_number">
                      <field name="NUM">1</field>
                    </shadow>
                  </value>
                </block>
              </category>
              <category name="Math" colour="#5C68A6">
                <block type="math_number">
                  <field name="NUM">0</field>
                </block>
                <block type="math_arithmetic">
                  <field name="OP">ADD</field>
                  <value name="A">
                    <shadow type="math_number">
                      <field name="NUM">1</field>
                    </shadow>
                  </value>
                  <value name="B">
                    <shadow type="math_number">
                      <field name="NUM">1</field>
                    </shadow>
                  </value>
                </block>
              </category>
              <sep></sep>
              <category name="Variables" colour="#A65C81" custom="VARIABLE"></category>
              <category name="Functions" colour="#9A5CA6" custom="PROCEDURE"></category>
            </xml>
        name: ''
        type: blockly
        workspace: |-
            <xml xmlns="http://www.w3.org/1999/xhtml" id="workspaceBlocks" style="display:none">
              <variables>
                <variable type="" id="n_Z(`R}mC,o1)`Z!yd]Z">couche_i</variable>
                <variable type="" id="xqt-AR@%7lw}h7Y7o?]!">matrice neurones couche précédente</variable>
                <variable type="" id="r~6vAmJ5h]i)R]-oiN2*">matrice poids couche précédente</variable>
                <variable type="" id="%j5Ewe_YBC(kHt1%N0/P">produit matriciel</variable>
                <variable type="" id="-OIi%|`Db+k$Q-IQt[%D">j</variable>
              </variables>
              <block type="procedures_defnoreturn" id="4$Wriel5UW(7EBdp6CAt" x="38" y="13">
                <mutation>
                  <arg name="couche_i" varid="n_Z(`R}mC,o1)`Z!yd]Z"></arg>
                </mutation>
                <field name="NAME">calculer la valeur des neurones de la nouche n°</field>
                <comment pinned="false" h="80" w="160">Describe this function...</comment>
                <statement name="STACK">
                  <block type="variables_set" id="0bSTKwMG(gR+,pfkm)Nx">
                    <field name="VAR" id="xqt-AR@%7lw}h7Y7o?]!" variabletype="">matrice neurones couche précédente</field>
                    <value name="VALUE">
                      <block type="nn_get_neuron_layer" id="Jw`kir4V).gm87b$NC$h">
                        <value name="NAME">
                          <block type="math_arithmetic" id="jN^%I#vb5q+Qi9Mt:auZ">
                            <field name="OP">MINUS</field>
                            <value name="A">
                              <block type="variables_get" id="CmN8iy@0nk|^F)qh/U5$">
                                <field name="VAR" id="n_Z(`R}mC,o1)`Z!yd]Z" variabletype="">couche_i</field>
                              </block>
                            </value>
                            <value name="B">
                              <shadow type="math_number" id=")2j~iTG_-Dqonh}.6nTx">
                                <field name="NUM">1</field>
                              </shadow>
                            </value>
                          </block>
                        </value>
                      </block>
                    </value>
                    <next>
                      <block type="variables_set" id="fOIq~YN~Px=Mk|1Nw9}x">
                        <field name="VAR" id="r~6vAmJ5h]i)R]-oiN2*" variabletype="">matrice poids couche précédente</field>
                        <value name="VALUE">
                          <block type="nn_get_weight_layer" id="};f(bo}`|ySoRbFD812(">
                            <value name="NAME">
                              <block type="math_arithmetic" id="|;N?C,EJ7rK{njFm45Zp">
                                <field name="OP">MINUS</field>
                                <value name="A">
                                  <block type="variables_get" id="A`qAYuTkm9bgp7SoDv08">
                                    <field name="VAR" id="n_Z(`R}mC,o1)`Z!yd]Z" variabletype="">couche_i</field>
                                  </block>
                                </value>
                                <value name="B">
                                  <block type="math_number" id="bB;l2WMlIH/Uz)pW.Q@y">
                                    <field name="NUM">1</field>
                                  </block>
                                </value>
                              </block>
                            </value>
                          </block>
                        </value>
                        <next>
                          <block type="variables_set" id="lXNDF5!0hp,a%KRne39q">
                            <field name="VAR" id="%j5Ewe_YBC(kHt1%N0/P" variabletype="">produit matriciel</field>
                            <value name="VALUE">
                              <block type="nn_matrix_prod" id="!HUUD0KSWO@zsd0Z,}Fm">
                                <value name="X">
                                  <block type="variables_get" id="/RzM9f1LL@Ktq3FY)=GG">
                                    <field name="VAR" id="xqt-AR@%7lw}h7Y7o?]!" variabletype="">matrice neurones couche précédente</field>
                                  </block>
                                </value>
                                <value name="Y">
                                  <block type="variables_get" id="D9AlmXxGP/E@@$=+%v*n">
                                    <field name="VAR" id="r~6vAmJ5h]i)R]-oiN2*" variabletype="">matrice poids couche précédente</field>
                                  </block>
                                </value>
                              </block>
                            </value>
                            <next>
                              <block type="controls_for" id="Od#Cy!.,35yeE71pjdaU">
                                <field name="VAR" id="-OIi%|`Db+k$Q-IQt[%D" variabletype="">j</field>
                                <value name="FROM">
                                  <shadow type="math_number" id="Heh4w#%`Y-o:%iYleOa7">
                                    <field name="NUM">1</field>
                                  </shadow>
                                </value>
                                <value name="TO">
                                  <block type="nn_get_width" id="Nbec[}r;dK/{Y_.:*73x">
                                    <value name="mat">
                                      <block type="variables_get" id="@].M:m1Z]N[SQ,VY8|CG">
                                        <field name="VAR" id="%j5Ewe_YBC(kHt1%N0/P" variabletype="">produit matriciel</field>
                                      </block>
                                    </value>
                                  </block>
                                </value>
                                <value name="BY">
                                  <shadow type="math_number" id="o2iB^E(PVd6a_jP58Yi6">
                                    <field name="NUM">1</field>
                                  </shadow>
                                </value>
                                <statement name="DO">
                                  <block type="nn_neuron_set_value_layer" id="%*z*)^{.`|U*CyKK5vE(">
                                    <value name="value">
                                      <block type="nn_sigmoid" id="hiN?%Tx$M6fiT!?6JEKh"></block>
                                    </value>
                                  </block>
                                </statement>
                              </block>
                            </next>
                          </block>
                        </next>
                      </block>
                    </next>
                  </block>
                </statement>
              </block>
              <block type="main" id="Zt~=MbR:qTPA0yvi*D2(" x="38" y="388">
                <next>
                  <block type="procedures_callnoreturn" id="fxOw$^u`+4NpHqMd#jB.">
                    <mutation name="calculer la valeur des neurones de la nouche n°">
                      <arg name="couche_i"></arg>
                    </mutation>
                    <value name="ARG0">
                      <block type="math_number" id="Co))iv}u/F?)dovO:+5~">
                        <field name="NUM">2</field>
                      </block>
                    </value>
                    <next>
                      <block type="procedures_callnoreturn" id="5^:9Ei}.WP]`LEr@%^^K">
                        <mutation name="calculer la valeur des neurones de la nouche n°">
                          <arg name="couche_i"></arg>
                        </mutation>
                        <value name="ARG0">
                          <block type="math_number" id="mw-gw^yKUVZxRTORRDN6">
                            <field name="NUM">3</field>
                          </block>
                        </value>
                      </block>
                    </next>
                  </block>
                </next>
              </block>
            </xml>
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
